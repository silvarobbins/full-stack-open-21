[{"/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/index.js":"1","/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/App.js":"2","/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/components/NewBook.js":"3","/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/components/Authors.js":"4","/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/components/Login.js":"5","/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/components/Books.js":"6"},{"size":729,"mtime":1647544748903,"results":"7","hashOfConfig":"8"},{"size":1382,"mtime":1647546988952,"results":"9","hashOfConfig":"8"},{"size":2106,"mtime":1647546062858,"results":"10","hashOfConfig":"8"},{"size":1985,"mtime":1647554223756,"results":"11","hashOfConfig":"8"},{"size":1389,"mtime":1647552128753,"results":"12","hashOfConfig":"8"},{"size":1529,"mtime":1647554965283,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uiknc7",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/index.js",[],[],"/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/App.js",[],[],["36","37"],"/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/components/NewBook.js",[],[],"/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/components/Authors.js",[],[],["38","39"],"/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/components/Login.js",["40"],[],"import { gql, useMutation } from \"@apollo/client\"\nimport React, { useEffect, useState } from \"react\"\n\nconst LOGIN = gql`\n  mutation login($username: String!, $password: String!){\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`\n\nconst Login = (props) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [ login, result ] = useMutation(LOGIN)\n\n  useEffect(() => {\n    if (result.data) {\n      const token = result.data.login.value\n      props.setToken(token)\n      localStorage.setItem('library-user-token', token)\n    }\n  }, [result.data])\n\n  const submit = (event) => {\n    event.preventDefault()\n\n    login({variables: {username: username, password: password}})\n    setUsername('')\n    setPassword('')\n    props.setPage('authors')\n  }\n\n  if (!props.show) {\n    return null\n  }\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <div>\n          username\n          <input \n            value={username}\n            onChange={({ target }) => setUsername(target.value) }\n          />\n        </div>\n        <div>\n          password\n          <input\n            type='password'\n            value={password}\n            onChange={({ target }) => setPassword(target.value) }\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login","/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/components/Books.js",["41","42","43"],[],"import React, { useEffect, useState } from 'react'\nimport { gql, useQuery } from '@apollo/client'\n\nconst GET_BOOKS = gql`\n  query allBooks($genre: String){\n    allBooks(genre: $genre){\n      title\n      published\n      author{\n        name\n      }\n      genres\n    }\n  }\n`\nconst Books = (props) => {\n  const [filter, setFilter] = useState(null)\n  const { loading, error, data, refetch } = useQuery(GET_BOOKS, {\n    variables: { genre: filter }\n  });\n  console.log(data)\n\n  if (loading) {\n    return(\n      <div>\n        loading...\n      </div>\n    )\n  }\n\n  if (!props.show) {\n    return null\n  }\n\n  const books = data.allBooks\n  const onlyUnique = (value, index, self) => {\n    return self.indexOf(value) === index;\n  }\n  const genres = books.flatMap((b) => b.genres).filter(onlyUnique)\n\n  return (\n    <div>\n      <h2>books</h2>\n      {filter ? <div>in genre {filter}</div>: <div>showing all</div>}\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>author</th>\n            <th>published</th>\n          </tr>\n          {books.map((b) => (\n            <tr key={b.title}>\n              <td>{b.title}</td>\n              <td>{b.author.name}</td>\n              <td>{b.published}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div>\n        {genres.map((g) => \n          <button key={g} onClick={() => setFilter(g)}>{g}</button>\n        )}\n        <button key={'empty'} onClick={() => setFilter(null)}>all genres</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Books\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"48"},{"ruleId":"46","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":24,"column":6,"nodeType":"52","endLine":24,"endColumn":19,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":26},{"ruleId":"54","severity":1,"message":"58","line":18,"column":20,"nodeType":"56","messageId":"57","endLine":18,"endColumn":25},{"ruleId":"54","severity":1,"message":"59","line":18,"column":33,"nodeType":"56","messageId":"57","endLine":18,"endColumn":40},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],["60"],["61"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["62"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'refetch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [props, result.data]",{"range":"65","text":"66"},[610,623],"[props, result.data]"]