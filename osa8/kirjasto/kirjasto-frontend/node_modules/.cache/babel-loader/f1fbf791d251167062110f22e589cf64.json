{"ast":null,"code":"var _jsxFileName = \"/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/components/Authors.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors  {\n      name\n      born\n      bookCount\n    }\n  }\n`;\nconst SET_BIRTHYEAR = gql`\n  mutation editAuthor($name: String!, $setBornTo: Int!) {\n    editAuthor(\n      name: $name\n      setBornTo: $setBornTo\n    ) {\n      name\n      born\n    }    \n    }\n`;\n\nconst Authors = props => {\n  _s();\n\n  const [name, setName] = useState(null);\n  const [born, setBorn] = useState('');\n  const [editAuthor] = useMutation(SET_BIRTHYEAR);\n  const result = useQuery(ALL_AUTHORS, {\n    pollInterval: 2000\n  });\n\n  if (!props.show) {\n    return null;\n  }\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n  const authors = result.data.allAuthors;\n  const options = authors.map(a => {\n    return {\n      value: a.name,\n      label: a.name\n    };\n  });\n  console.log(options);\n\n  const submit = event => {\n    event.preventDefault();\n    editAuthor({\n      variables: {\n        name: name.value,\n        setBornTo: parseInt(born)\n      }\n    });\n    setName(null);\n    setBorn('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"authors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"born\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), authors.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.born\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.bookCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, a.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Set birthyear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: name,\n          onChange: setName,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"born\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: born,\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setBorn(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"update author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Authors, \"heOIgS89tmR9K3FZVrO9Fq0aZts=\", false, function () {\n  return [useMutation, useQuery];\n});\n\n_c = Authors;\nexport default Authors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"sources":["/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/components/Authors.js"],"names":["gql","useMutation","useQuery","React","useState","Select","ALL_AUTHORS","SET_BIRTHYEAR","Authors","props","name","setName","born","setBorn","editAuthor","result","pollInterval","show","loading","authors","data","allAuthors","options","map","a","value","label","console","log","submit","event","preventDefault","variables","setBornTo","parseInt","bookCount","target"],"mappings":"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","sourcesContent":["import { gql, useMutation, useQuery } from '@apollo/client'\nimport React, { useState } from 'react'\nimport Select from 'react-select'\n\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors  {\n      name\n      born\n      bookCount\n    }\n  }\n`\n\nconst SET_BIRTHYEAR = gql`\n  mutation editAuthor($name: String!, $setBornTo: Int!) {\n    editAuthor(\n      name: $name\n      setBornTo: $setBornTo\n    ) {\n      name\n      born\n    }    \n    }\n`\n\nconst Authors = (props) => {\n  const [name, setName] = useState(null)\n  const [born, setBorn] = useState('')\n\n  const [editAuthor] = useMutation(SET_BIRTHYEAR)\n\n  const result = useQuery(ALL_AUTHORS, {\n    pollInterval: 2000\n  })\n\n  if (!props.show) {\n    return null\n  }\n\n  if (result.loading) {\n    return(\n      <div>\n        loading...\n      </div>\n    )\n  }\n  const authors = result.data.allAuthors\n  const options = authors.map(a => {\n    return {\n      value: a.name, \n      label: a.name\n    }\n  })\n  console.log(options)\n\n  const submit = (event) => {\n    event.preventDefault()\n\n    editAuthor({ variables: {name: name.value, setBornTo: parseInt(born)} })\n    setName(null)\n    setBorn('')\n  }\n\n  return (\n    <div>\n      <h2>authors</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>born</th>\n            <th>books</th>\n          </tr>\n          {authors.map((a) => (\n            <tr key={a.name}>\n              <td>{a.name}</td>\n              <td>{a.born}</td>\n              <td>{a.bookCount}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <h3>Set birthyear</h3>\n      <form onSubmit={submit}>\n        <div>\n          <Select defaultValue={name} onChange={setName} options={options}/>\n        </div>\n        <div>\n          born\n          <input\n            value={born}\n            onChange={({ target }) => setBorn(target.value)}\n          />\n        </div>\n        <button type=\"submit\">update author</button>\n        </form>\n    </div>\n  )\n}\n\nexport default Authors\n"]},"metadata":{},"sourceType":"module"}