{"ast":null,"code":"var _jsxFileName = \"/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useMutation } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOGIN = gql`\n  mutation login($username: String!, $password: String!){\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`;\n\nconst Login = props => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [login, result] = useMutation(LOGIN);\n  useEffect(() => {\n    if (result.data) {\n      const token = result.data.login.value;\n      props.setToken(token);\n      localStorage.setItem('library-user-token', token);\n      console.log(result);\n    }\n  }, [result.data]);\n\n  const submit = event => {\n    event.preventDefault();\n    login({\n      variables: {\n        username: username,\n        password: password\n      }\n    });\n    setUsername('');\n    setPassword('');\n    props.setPage('authors');\n  };\n\n  if (!props.show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: username,\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setUsername(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setPassword(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"u2RPWweKu8UDftFqMNmC9b6ZCBE=\", false, function () {\n  return [useMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa8/kirjasto/kirjasto-frontend/src/components/Login.js"],"names":["gql","useMutation","React","useEffect","useState","LOGIN","Login","props","username","setUsername","password","setPassword","login","result","data","token","value","setToken","localStorage","setItem","console","log","submit","event","preventDefault","variables","setPage","show","target"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,KAAK,GAAGL,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,MAAMM,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAAEQ,KAAF,EAASC,MAAT,IAAoBZ,WAAW,CAACI,KAAD,CAArC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,MAAM,CAACC,IAAX,EAAiB;AACf,YAAMC,KAAK,GAAGF,MAAM,CAACC,IAAP,CAAYF,KAAZ,CAAkBI,KAAhC;AACAT,MAAAA,KAAK,CAACU,QAAN,CAAeF,KAAf;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,oBAArB,EAA2CJ,KAA3C;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACD;AACF,GAPQ,EAON,CAACA,MAAM,CAACC,IAAR,CAPM,CAAT;;AASA,QAAMQ,MAAM,GAAIC,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACC,cAAN;AAEAZ,IAAAA,KAAK,CAAC;AAACa,MAAAA,SAAS,EAAE;AAACjB,QAAAA,QAAQ,EAAEA,QAAX;AAAqBE,QAAAA,QAAQ,EAAEA;AAA/B;AAAZ,KAAD,CAAL;AACAD,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAJ,IAAAA,KAAK,CAACmB,OAAN,CAAc,SAAd;AACD,GAPD;;AASA,MAAI,CAACnB,KAAK,CAACoB,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEL,MAAhB;AAAA,8BACE;AAAA,4CAEE;AACE,UAAA,KAAK,EAAEd,QADT;AAEE,UAAA,QAAQ,EAAE;AAAA,gBAAC;AAAEoB,cAAAA;AAAF,aAAD;AAAA,mBAAgBnB,WAAW,CAACmB,MAAM,CAACZ,KAAR,CAA3B;AAAA;AAFZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,4CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAEN,QAFT;AAGE,UAAA,QAAQ,EAAE;AAAA,gBAAC;AAAEkB,cAAAA;AAAF,aAAD;AAAA,mBAAgBjB,WAAW,CAACiB,MAAM,CAACZ,KAAR,CAA3B;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAgBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAlDD;;GAAMV,K;UAIsBL,W;;;KAJtBK,K;AAoDN,eAAeA,KAAf","sourcesContent":["import { gql, useMutation } from \"@apollo/client\"\nimport React, { useEffect, useState } from \"react\"\n\nconst LOGIN = gql`\n  mutation login($username: String!, $password: String!){\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`\n\nconst Login = (props) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [ login, result ] = useMutation(LOGIN)\n\n  useEffect(() => {\n    if (result.data) {\n      const token = result.data.login.value\n      props.setToken(token)\n      localStorage.setItem('library-user-token', token)\n      console.log(result)\n    }\n  }, [result.data])\n\n  const submit = (event) => {\n    event.preventDefault()\n\n    login({variables: {username: username, password: password}})\n    setUsername('')\n    setPassword('')\n    props.setPage('authors')\n  }\n\n  if (!props.show) {\n    return null\n  }\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <div>\n          username\n          <input \n            value={username}\n            onChange={({ target }) => setUsername(target.value) }\n          />\n        </div>\n        <div>\n          password\n          <input\n            type='password'\n            value={password}\n            onChange={({ target }) => setPassword(target.value) }\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}