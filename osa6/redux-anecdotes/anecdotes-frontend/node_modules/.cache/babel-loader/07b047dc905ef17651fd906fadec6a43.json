{"ast":null,"code":"var _jsxFileName = \"/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa6/redux-anecdotes/anecdotes-frontend/src/components/AnecdoteList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { voteAnecdote } from \"../reducers/anecdoteReducer\";\nimport { setNotification } from \"../reducers/notificationReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Anecdote = ({\n  anecdote,\n  handleClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [anecdote.content, \"has \", anecdote.votes, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, anecdote.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Anecdote;\n\nconst Anecdotes = props => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.anecdotes.map(anecdote => /*#__PURE__*/_jsxDEV(Anecdote, {\n      anecdote: anecdote,\n      handleClick: () => {\n        props.voteAnecdote(anecdote);\n        props.setNotification(`You voted '${anecdote.content}'`, 5);\n      }\n    }, anecdote.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Anecdotes;\n\nconst mapStateToProps = state => {\n  if (state.filter === null) {\n    return {\n      anecdotes: state.anecdotes\n    };\n  }\n\n  return {\n    anecdotes: state.anecdotes.filter(anecdote => anecdote.content.toLowerCase().includes(state.filter)).sort((a, b) => b.votes - a.votes)\n  };\n};\n\nconst mapDispatchToProps = {\n  voteAnecdote,\n  setNotification\n};\nconst ConnectedAnecdotes = connect(mapStateToProps, mapDispatchToProps)(Anecdotes);\nexport default ConnectedAnecdotes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Anecdote\");\n$RefreshReg$(_c2, \"Anecdotes\");","map":{"version":3,"sources":["/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa6/redux-anecdotes/anecdotes-frontend/src/components/AnecdoteList.js"],"names":["React","connect","voteAnecdote","setNotification","Anecdote","anecdote","handleClick","content","votes","id","Anecdotes","props","anecdotes","map","mapStateToProps","state","filter","toLowerCase","includes","sort","a","b","mapDispatchToProps","ConnectedAnecdotes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,eAAT,QAAgC,iCAAhC;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA+B;AAC9C,sBACE;AAAA,2BACE;AAAA,iBACGD,QAAQ,CAACE,OADZ,UAEOF,QAAQ,CAACG,KAFhB,eAGE;AAAQ,QAAA,OAAO,EAAEF,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAAUD,QAAQ,CAACI,EAAnB;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;KAAML,Q;;AAYN,MAAMM,SAAS,GAAIC,KAAD,IAAW;AAC3B,sBACE;AAAA,cACGA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoBR,QAAQ,iBAC3B,QAAC,QAAD;AAEE,MAAA,QAAQ,EAAIA,QAFd;AAGE,MAAA,WAAW,EAAI,MAAM;AACnBM,QAAAA,KAAK,CAACT,YAAN,CAAmBG,QAAnB;AACAM,QAAAA,KAAK,CAACR,eAAN,CAAuB,cAAaE,QAAQ,CAACE,OAAQ,GAArD,EAAyD,CAAzD;AACH;AAND,OACSF,QAAQ,CAACI,EADlB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;MAAMC,S;;AAiBN,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACjC,MAAKA,KAAK,CAACC,MAAN,KAAiB,IAAtB,EAA4B;AAC1B,WAAO;AACLJ,MAAAA,SAAS,EAAEG,KAAK,CAACH;AADZ,KAAP;AAGD;;AACD,SAAO;AACLA,IAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBI,MAAhB,CAAuBX,QAAQ,IAC1CA,QAAQ,CAACE,OAAT,CACGU,WADH,GAEGC,QAFH,CAEYH,KAAK,CAACC,MAFlB,CADW,EAIRG,IAJQ,CAIH,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACb,KAAF,GAAQY,CAAC,CAACZ,KAJhB;AADN,GAAP;AAOD,CAbD;;AAeA,MAAMc,kBAAkB,GAAG;AACzBpB,EAAAA,YADyB;AAEzBC,EAAAA;AAFyB,CAA3B;AAMA,MAAMoB,kBAAkB,GAAGtB,OAAO,CAChCa,eADgC,EAEhCQ,kBAFgC,CAAP,CAGvBZ,SAHuB,CAA3B;AAKA,eAAea,kBAAf","sourcesContent":["import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { voteAnecdote } from \"../reducers/anecdoteReducer\"\nimport { setNotification } from \"../reducers/notificationReducer\"\n\nconst Anecdote = ({ anecdote, handleClick }) => {\n  return(\n    <div key={anecdote.id}>\n      <div>\n        {anecdote.content}\n        has {anecdote.votes}\n        <button onClick={handleClick}>vote</button>\n      </div>\n    </div>\n  )\n}\n\nconst Anecdotes = (props) => {\n  return (\n    <ul>\n      {props.anecdotes.map(anecdote =>\n        <Anecdote\n          key = {anecdote.id}\n          anecdote = {anecdote}\n          handleClick = {() => {\n            props.voteAnecdote(anecdote)\n            props.setNotification(`You voted '${anecdote.content}'`, 5)\n        }\n        }/>\n      )}\n    </ul>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  if ( state.filter === null) {\n    return {\n      anecdotes: state.anecdotes\n    }\n  }\n  return {\n    anecdotes: state.anecdotes.filter(anecdote => \n    anecdote.content\n      .toLowerCase()\n      .includes(state.filter))\n      .sort((a,b) => b.votes-a.votes)\n  }\n}\n\nconst mapDispatchToProps = {\n  voteAnecdote,\n  setNotification,\n\n}\n\nconst ConnectedAnecdotes = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  )(Anecdotes)\n\nexport default ConnectedAnecdotes"]},"metadata":{},"sourceType":"module"}