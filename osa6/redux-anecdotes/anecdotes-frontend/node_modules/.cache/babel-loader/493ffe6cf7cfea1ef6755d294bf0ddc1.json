{"ast":null,"code":"const initialState = null;\nlet timeoutID;\nexport const setNotification = (notification, time) => {\n  timeoutID = setTimeout(() => {\n    hideNotification();\n  }, time * 1000);\n  return async dispatch => {\n    dispatch({\n      type: 'SHOW_NOTIFICATION',\n      notification\n    });\n  };\n};\nexport const clearNotification = () => {\n  console.log(timeoutID);\n\n  if (timeoutID) {\n    clearTimeout(timeoutID);\n  }\n};\nexport const hideNotification = () => {\n  return {\n    type: 'HIDE_NOTIFICATION'\n  };\n};\n\nconst notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SHOW_NOTIFICATION':\n      return action.notification;\n\n    case 'HIDE_NOTIFICATION':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default notificationReducer;","map":{"version":3,"sources":["/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa6/redux-anecdotes/anecdotes-frontend/src/reducers/notificationReducer.js"],"names":["initialState","timeoutID","setNotification","notification","time","setTimeout","hideNotification","dispatch","type","clearNotification","console","log","clearTimeout","notificationReducer","state","action"],"mappings":"AAAA,MAAMA,YAAY,GAAG,IAArB;AACA,IAAIC,SAAJ;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,YAAD,EAAeC,IAAf,KAAwB;AACrDH,EAAAA,SAAS,GAAGI,UAAU,CAAC,MAAM;AAAEC,IAAAA,gBAAgB;AAAI,GAA7B,EAA+BF,IAAI,GAAC,IAApC,CAAtB;AACA,SAAO,MAAMG,QAAN,IAAkB;AACvBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,mBADC;AAEPL,MAAAA;AAFO,KAAD,CAAR;AAID,GALD;AAMD,CARM;AAUP,OAAO,MAAMM,iBAAiB,GAAG,MAAM;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;;AACA,MAAIA,SAAJ,EAAe;AACbW,IAAAA,YAAY,CAACX,SAAD,CAAZ;AACD;AACF,CALM;AAOP,OAAO,MAAMK,gBAAgB,GAAG,MAAM;AACpC,SAAO;AACLE,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;;AAMP,MAAMK,mBAAmB,GAAG,CAACC,KAAK,GAAGd,YAAT,EAAuBe,MAAvB,KAAkC;AAC5D,UAAOA,MAAM,CAACP,IAAd;AACE,SAAK,mBAAL;AACE,aAAOO,MAAM,CAACZ,YAAd;;AACF,SAAK,mBAAL;AACE,aAAO,IAAP;;AACF;AACE,aAAOW,KAAP;AANJ;AAQD,CATD;;AAWA,eAAeD,mBAAf","sourcesContent":["const initialState = null\nlet timeoutID\n\nexport const setNotification = (notification, time) => {\n  timeoutID = setTimeout(() => { hideNotification() }, time*1000)\n  return async dispatch => {\n    dispatch({\n      type: 'SHOW_NOTIFICATION',\n      notification\n    })\n  }\n}\n\nexport const clearNotification = () => {\n  console.log(timeoutID)\n  if (timeoutID) {\n    clearTimeout(timeoutID)\n  }\n}\n\nexport const hideNotification = () => {\n  return {\n    type: 'HIDE_NOTIFICATION'\n  }\n}\n\nconst notificationReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'SHOW_NOTIFICATION':\n      return action.notification\n    case 'HIDE_NOTIFICATION':\n      return null\n    default:\n      return state\n  }\n}\n\nexport default notificationReducer"]},"metadata":{},"sourceType":"module"}