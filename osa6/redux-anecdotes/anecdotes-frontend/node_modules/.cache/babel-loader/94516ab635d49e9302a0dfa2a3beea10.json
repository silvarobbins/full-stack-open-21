{"ast":null,"code":"import { composeWithDevTools } from 'redux-devtools-extension';\nimport anecdoteReducer, { initializeAnecdotes } from './reducers/anecdoteReducer';\nimport notificationReducer from './reducers/notificationReducer';\nimport { createStore, combineReducers } from 'redux';\nimport filterReducer from './reducers/filterReducer';\nimport anecdoteService from './services/anecdotes';\nconst reducer = combineReducers({\n  anecdotes: anecdoteReducer,\n  notification: notificationReducer,\n  filter: filterReducer\n});\nconst store = createStore(reducer, composeWithDevTools());\nanecdoteService.getAll().then(anecdotes => store.dispatch(initializeAnecdotes(anecdotes)));\nexport default store;","map":{"version":3,"sources":["/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa6/redux-anecdotes/anecdotes-frontend/src/store.js"],"names":["composeWithDevTools","anecdoteReducer","initializeAnecdotes","notificationReducer","createStore","combineReducers","filterReducer","anecdoteService","reducer","anecdotes","notification","filter","store","getAll","then","dispatch"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,IAA0BC,mBAA1B,QAAqD,4BAArD;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AAEA,MAAMC,OAAO,GAAGH,eAAe,CAAC;AAC9BI,EAAAA,SAAS,EAAER,eADmB;AAE9BS,EAAAA,YAAY,EAAEP,mBAFgB;AAG9BQ,EAAAA,MAAM,EAAEL;AAHsB,CAAD,CAA/B;AAOA,MAAMM,KAAK,GAAGR,WAAW,CACvBI,OADuB,EAEvBR,mBAAmB,EAFI,CAAzB;AAKAO,eAAe,CAACM,MAAhB,GAAyBC,IAAzB,CAA8BL,SAAS,IACrCG,KAAK,CAACG,QAAN,CAAeb,mBAAmB,CAACO,SAAD,CAAlC,CADF;AAIA,eAAeG,KAAf","sourcesContent":["import { composeWithDevTools } from 'redux-devtools-extension'\nimport anecdoteReducer, { initializeAnecdotes } from './reducers/anecdoteReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport { createStore, combineReducers } from 'redux'\nimport filterReducer from './reducers/filterReducer'\nimport anecdoteService from './services/anecdotes'\n\nconst reducer = combineReducers({\n  anecdotes: anecdoteReducer,\n  notification: notificationReducer,\n  filter: filterReducer\n})\n\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools()\n)\n\nanecdoteService.getAll().then(anecdotes => \n  store.dispatch(initializeAnecdotes(anecdotes))\n)\n\nexport default store"]},"metadata":{},"sourceType":"module"}