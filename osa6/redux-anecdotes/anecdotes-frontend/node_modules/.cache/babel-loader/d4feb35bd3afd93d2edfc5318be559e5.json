{"ast":null,"code":"import anecdoteService from \"../services/anecdotes\";\n\nconst getId = () => (100000 * Math.random()).toFixed(0);\n\nconst asObject = anecdote => {\n  return {\n    content: anecdote,\n    id: getId(),\n    votes: 0\n  };\n};\n\nexport const createAnecdote = content => {\n  return async dispatch => {\n    const newAnecdote = await anecdoteService.createNew(content);\n    dispatch({\n      type: 'NEW_ANECDOTE',\n      data: newAnecdote\n    });\n  };\n};\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll();\n    dispatch({\n      type: 'INIT_ANECDOTES',\n      data: anecdotes\n    });\n  };\n};\nexport const voteAnecdote = anecdote => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.vote(anecdote);\n    console.log(\"1\");\n    dispatch({\n      type: 'VOTE',\n      data: anecdotes\n    });\n  };\n};\n\nconst anecdoteReducer = (state = [], action) => {\n  console.log('state now: ', state);\n  console.log('action', action);\n\n  switch (action.type) {\n    case 'NEW_ANECDOTE':\n      return [...state, action.data];\n\n    case 'INIT_ANECDOTES':\n      return action.data;\n\n    case 'VOTE':\n      return action.data;\n\n    default:\n      return state;\n  }\n};\n\nexport default anecdoteReducer;","map":{"version":3,"sources":["/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa6/redux-anecdotes/anecdotes-frontend/src/reducers/anecdoteReducer.js"],"names":["anecdoteService","getId","Math","random","toFixed","asObject","anecdote","content","id","votes","createAnecdote","dispatch","newAnecdote","createNew","type","data","initializeAnecdotes","anecdotes","getAll","voteAnecdote","vote","console","log","anecdoteReducer","state","action"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,KAAK,GAAG,MAAM,CAAC,SAASC,IAAI,CAACC,MAAL,EAAV,EAAyBC,OAAzB,CAAiC,CAAjC,CAApB;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7B,SAAO;AACLC,IAAAA,OAAO,EAAED,QADJ;AAELE,IAAAA,EAAE,EAAEP,KAAK,EAFJ;AAGLQ,IAAAA,KAAK,EAAE;AAHF,GAAP;AAKD,CAND;;AAQA,OAAO,MAAMC,cAAc,GAAIH,OAAD,IAAa;AACzC,SAAO,MAAMI,QAAN,IAAkB;AACvB,UAAMC,WAAW,GAAG,MAAMZ,eAAe,CAACa,SAAhB,CAA0BN,OAA1B,CAA1B;AACAI,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,IAAI,EAAEH;AAFC,KAAD,CAAR;AAIC,GANH;AAOD,CARM;AAUP,OAAO,MAAMI,mBAAmB,GAAG,MAAM;AACvC,SAAO,MAAML,QAAN,IAAkB;AACvB,UAAMM,SAAS,GAAG,MAAMjB,eAAe,CAACkB,MAAhB,EAAxB;AACAP,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,IAAI,EAAEE;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAME,YAAY,GAAIb,QAAD,IAAc;AACxC,SAAO,MAAMK,QAAN,IAAkB;AACvB,UAAMM,SAAS,GAAG,MAAMjB,eAAe,CAACoB,IAAhB,CAAqBd,QAArB,CAAxB;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAX,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,MADC;AAEPC,MAAAA,IAAI,EAAEE;AAFC,KAAD,CAAR;AAID,GAPD;AAQD,CATM;;AAYP,MAAMM,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC9CJ,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BE,KAA3B;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBG,MAAtB;;AACA,UAAOA,MAAM,CAACX,IAAd;AACE,SAAK,cAAL;AACE,aAAO,CAAC,GAAGU,KAAJ,EAAWC,MAAM,CAACV,IAAlB,CAAP;;AACF,SAAK,gBAAL;AACE,aAAOU,MAAM,CAACV,IAAd;;AACF,SAAK,MAAL;AACE,aAAOU,MAAM,CAACV,IAAd;;AACF;AAAS,aAAOS,KAAP;AAPX;AAUD,CAbD;;AAeA,eAAeD,eAAf","sourcesContent":["import anecdoteService from \"../services/anecdotes\"\n\nconst getId = () => (100000 * Math.random()).toFixed(0)\n\nconst asObject = (anecdote) => {\n  return {\n    content: anecdote,\n    id: getId(),\n    votes: 0\n  }\n}\n\nexport const createAnecdote = (content) => {\n  return async dispatch => {\n    const newAnecdote = await anecdoteService.createNew(content)\n    dispatch({\n      type: 'NEW_ANECDOTE',\n      data: newAnecdote\n    })\n    }\n}\n\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll()\n    dispatch({\n      type: 'INIT_ANECDOTES',\n      data: anecdotes\n    })\n  }\n}\n\nexport const voteAnecdote = (anecdote) => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.vote(anecdote)\n    console.log(\"1\")\n    dispatch({\n      type: 'VOTE',\n      data: anecdotes\n    })\n  }\n}\n\n\nconst anecdoteReducer = (state = [], action) => {\n  console.log('state now: ', state)\n  console.log('action', action)\n  switch(action.type) {\n    case 'NEW_ANECDOTE':\n      return [...state, action.data]\n    case 'INIT_ANECDOTES' :\n      return action.data\n    case 'VOTE':\n      return action.data\n    default: return state\n  }\n\n}\n\nexport default anecdoteReducer"]},"metadata":{},"sourceType":"module"}