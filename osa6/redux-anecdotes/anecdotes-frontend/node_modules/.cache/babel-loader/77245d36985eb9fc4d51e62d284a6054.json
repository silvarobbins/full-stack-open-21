{"ast":null,"code":"const initialState = null;\nlet timeoutID;\nexport const setNotification = (notification, time) => {\n  return async dispatch => {\n    clearNotification();\n    timeoutID = setTimeout(() => {\n      dispatch(hideNotification());\n    }, time * 1000);\n    dispatch({\n      type: 'SHOW_NOTIFICATION',\n      notification\n    });\n  };\n};\nexport const clearNotification = () => {\n  clearTimeout(timeoutID);\n};\nexport const hideNotification = () => {\n  return {\n    type: 'HIDE_NOTIFICATION'\n  };\n};\n\nconst notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SHOW_NOTIFICATION':\n      return action.notification;\n\n    case 'HIDE_NOTIFICATION':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default notificationReducer;","map":{"version":3,"sources":["/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa6/redux-anecdotes/anecdotes-frontend/src/reducers/notificationReducer.js"],"names":["initialState","timeoutID","setNotification","notification","time","dispatch","clearNotification","setTimeout","hideNotification","type","clearTimeout","notificationReducer","state","action"],"mappings":"AAAA,MAAMA,YAAY,GAAG,IAArB;AACA,IAAIC,SAAJ;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,YAAD,EAAeC,IAAf,KAAwB;AACrD,SAAO,MAAMC,QAAN,IAAkB;AACvBC,IAAAA,iBAAiB;AACjBL,IAAAA,SAAS,GAAGM,UAAU,CAAC,MAAM;AAAEF,MAAAA,QAAQ,CAACG,gBAAgB,EAAjB,CAAR;AAA8B,KAAvC,EAAyCJ,IAAI,GAAC,IAA9C,CAAtB;AACAC,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,mBADC;AAEPN,MAAAA;AAFO,KAAD,CAAR;AAID,GAPD;AAQD,CATM;AAWP,OAAO,MAAMG,iBAAiB,GAAG,MAAM;AACrCI,EAAAA,YAAY,CAACT,SAAD,CAAZ;AACD,CAFM;AAIP,OAAO,MAAMO,gBAAgB,GAAG,MAAM;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;;AAMP,MAAME,mBAAmB,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAC5D,UAAOA,MAAM,CAACJ,IAAd;AACE,SAAK,mBAAL;AACE,aAAOI,MAAM,CAACV,YAAd;;AACF,SAAK,mBAAL;AACE,aAAO,IAAP;;AACF;AACE,aAAOS,KAAP;AANJ;AAQD,CATD;;AAWA,eAAeD,mBAAf","sourcesContent":["const initialState = null\nlet timeoutID\n\nexport const setNotification = (notification, time) => {\n  return async dispatch => {\n    clearNotification()\n    timeoutID = setTimeout(() => { dispatch(hideNotification()) }, time*1000)\n    dispatch({\n      type: 'SHOW_NOTIFICATION',\n      notification\n    })\n  }\n}\n\nexport const clearNotification = () => {\n  clearTimeout(timeoutID)\n}\n\nexport const hideNotification = () => {\n  return {\n    type: 'HIDE_NOTIFICATION'\n  }\n}\n\nconst notificationReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'SHOW_NOTIFICATION':\n      return action.notification\n    case 'HIDE_NOTIFICATION':\n      return null\n    default:\n      return state\n  }\n}\n\nexport default notificationReducer"]},"metadata":{},"sourceType":"module"}