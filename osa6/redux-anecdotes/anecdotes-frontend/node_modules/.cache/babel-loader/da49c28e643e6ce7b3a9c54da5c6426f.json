{"ast":null,"code":"import anecdoteService from \"../services/anecdotes\";\n\nconst getId = () => (100000 * Math.random()).toFixed(0);\n\nexport const createAnecdote = content => {\n  return async dispatch => {\n    const newAnecdote = await anecdoteService.createNew(content);\n    dispatch({\n      type: 'NEW_ANECDOTE',\n      data: newAnecdote\n    });\n  };\n};\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll();\n    dispatch({\n      type: 'INIT_ANECDOTES',\n      data: anecdotes\n    });\n  };\n};\nexport const voteAnecdote = id => {\n  return {\n    type: 'VOTE',\n    data: {\n      id\n    }\n  };\n};\n\nconst anecdoteReducer = (state = [], action) => {\n  console.log('state now: ', state);\n  console.log('action', action);\n\n  switch (action.type) {\n    case 'NEW_ANECDOTE':\n      return [...state, action.data];\n\n    case 'INIT_ANECDOTES':\n      return action.data;\n\n    case 'VOTE':\n      const id = action.data.id;\n      const anecdoteToVote = state.find(a => a.id === id);\n      const newAnecdote = { ...anecdoteToVote,\n        votes: anecdoteToVote.votes + 1\n      };\n      return state.map(anecdote => anecdote.id !== id ? anecdote : newAnecdote);\n\n    default:\n      return state;\n  }\n};\n\nexport default anecdoteReducer;","map":{"version":3,"sources":["/Users/silva/Documents/Aalto/Ohjelmointi/Full Stack Open/osa6/redux-anecdotes/anecdotes-frontend/src/reducers/anecdoteReducer.js"],"names":["anecdoteService","getId","Math","random","toFixed","createAnecdote","content","dispatch","newAnecdote","createNew","type","data","initializeAnecdotes","anecdotes","getAll","voteAnecdote","id","anecdoteReducer","state","action","console","log","anecdoteToVote","find","a","votes","map","anecdote"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,KAAK,GAAG,MAAM,CAAC,SAASC,IAAI,CAACC,MAAL,EAAV,EAAyBC,OAAzB,CAAiC,CAAjC,CAApB;;AAEA,OAAO,MAAMC,cAAc,GAAIC,OAAD,IAAa;AACzC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,WAAW,GAAG,MAAMR,eAAe,CAACS,SAAhB,CAA0BH,OAA1B,CAA1B;AACAC,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,IAAI,EAAEH;AAFC,KAAD,CAAR;AAIC,GANH;AAOD,CARM;AAUP,OAAO,MAAMI,mBAAmB,GAAG,MAAM;AACvC,SAAO,MAAML,QAAN,IAAkB;AACvB,UAAMM,SAAS,GAAG,MAAMb,eAAe,CAACc,MAAhB,EAAxB;AACAP,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,IAAI,EAAEE;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAQ,MAAME,YAAY,GAAIC,EAAD,IAAQ;AACnC,SAAO;AACLN,IAAAA,IAAI,EAAE,MADD;AAELC,IAAAA,IAAI,EAAE;AAACK,MAAAA;AAAD;AAFD,GAAP;AAID,CALO;;AAQR,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,KAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AACA,UAAOA,MAAM,CAACT,IAAd;AACE,SAAK,cAAL;AACE,aAAO,CAAC,GAAGQ,KAAJ,EAAWC,MAAM,CAACR,IAAlB,CAAP;;AACF,SAAK,gBAAL;AACE,aAAOQ,MAAM,CAACR,IAAd;;AACF,SAAK,MAAL;AACE,YAAMK,EAAE,GAAGG,MAAM,CAACR,IAAP,CAAYK,EAAvB;AACA,YAAMM,cAAc,GAAGJ,KAAK,CAACK,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACR,EAAF,KAASA,EAAzB,CAAvB;AACA,YAAMR,WAAW,GAAG,EAClB,GAAGc,cADe;AAElBG,QAAAA,KAAK,EAAEH,cAAc,CAACG,KAAf,GAAuB;AAFZ,OAApB;AAIA,aAAOP,KAAK,CAACQ,GAAN,CAAUC,QAAQ,IACvBA,QAAQ,CAACX,EAAT,KAAgBA,EAAhB,GAAqBW,QAArB,GAAgCnB,WAD3B,CAAP;;AAEF;AAAS,aAAOU,KAAP;AAdX;AAiBD,CApBD;;AAsBA,eAAeD,eAAf","sourcesContent":["import anecdoteService from \"../services/anecdotes\"\n\nconst getId = () => (100000 * Math.random()).toFixed(0)\n\nexport const createAnecdote = (content) => {\n  return async dispatch => {\n    const newAnecdote = await anecdoteService.createNew(content)\n    dispatch({\n      type: 'NEW_ANECDOTE',\n      data: newAnecdote\n    })\n    }\n}\n\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll()\n    dispatch({\n      type: 'INIT_ANECDOTES',\n      data: anecdotes\n    })\n  }\n}\n\nexport  const voteAnecdote = (id) => {\n  return {\n    type: 'VOTE',\n    data: {id}\n  }\n}\n\n\nconst anecdoteReducer = (state = [], action) => {\n  console.log('state now: ', state)\n  console.log('action', action)\n  switch(action.type) {\n    case 'NEW_ANECDOTE':\n      return [...state, action.data]\n    case 'INIT_ANECDOTES' :\n      return action.data\n    case 'VOTE':\n      const id = action.data.id\n      const anecdoteToVote = state.find(a => a.id === id)\n      const newAnecdote = {\n        ...anecdoteToVote, \n        votes: anecdoteToVote.votes + 1\n      }\n      return state.map(anecdote => \n        anecdote.id !== id ? anecdote : newAnecdote)\n    default: return state\n  }\n\n}\n\nexport default anecdoteReducer"]},"metadata":{},"sourceType":"module"}